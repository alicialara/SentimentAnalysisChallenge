# .github/workflows/deploy.yml
name: Deploy to ECS

on:
  push:
    branches:
      - main
      - develop
      - staging

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Log in to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push backend Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: backend-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./backend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Build, tag, and push frontend Docker image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: frontend-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG ./frontend
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

    - name: Deploy to Amazon ECS
      env:
        AWS_REGION: us-west-2
        ECS_CLUSTER: your-ecs-cluster
        ECS_SERVICE: your-ecs-service
        BACKEND_IMAGE: ${{ steps.login-ecr.outputs.registry }}/backend-repo:${{ github.sha }}
        FRONTEND_IMAGE: ${{ steps.login-ecr.outputs.registry }}/frontend-repo:${{ github.sha }}
      run: |
        aws ecs update-service --cluster $ECS_CLUSTER --service backend-service --force-new-deployment --region $AWS_REGION
        aws ecs update-service --cluster $ECS_CLUSTER --service frontend-service --force-new-deployment --region $AWS_REGION
